@using SitioCore.Data
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Identity.EntityFrameworkCore

@inject SignInManager<UsuarioConversor> SignInManager
@inject UserManager<UsuarioConversor> UserManager

@{
    ViewData["Title"] = "Calculin";
}
<div class="jumbotron">
    <div class="text-center">
            <h1>Bienvenidos a Calculin</h1>
    </div>
    <div class="text-center">
         @if (SignInManager.IsSignedIn(User))
         {
             <a class="btn btn-primary btn-lg" asp-controller="Home" asp-action="VerMonedas">Ver Monedas</a>
             <a class="btn btn-primary btn-lg" asp-controller="Account" asp-action="Logoff">Log out</a>
         }
         else
         {
             <h2><a class="btn btn-primary btn-lg" asp-controller="Account" asp-action="Login">Login</a></h2>
             <h2><a class="btn btn-primary btn-lg" asp-controller="Account" asp-action="RegistroUsuario">Registro usuario</a></h2>
         }
    </div>
</div>
<div class="row">
    <div class="col-md-3">
        <h3>Proposito Principal:</h3>
        <ul>
            <li>Desarrolla una aplicación web de conversión de divisa utilizando cualquier API gratuito de conversión.</li>
            <li>Por ejemplo: 
            <ul>
                <li> <a href="http://currencyconverter.kowabunga.net/converter.asmx">currencyconverter.kowabunga.net </a></li>
                <li><a href="https://1forge.com/forex-data-api">Iforge.com </a> </li>
                <li><a href="https://free.currencyconverterapi.com/">free.currencyconverterapi.com </a> </li>
            </ul>
            </li>
            <li>La página web principal de la aplicación solicitará al usuario que introduzca un importe, la divisa de origen y la divisa de destino y deberá devolver el resultado de la conversión utilizando el cambio correspondiente a la fecha y hora del momento en el que se realiza la petición.</li>
        </ul>
    </div>
    <div class="col-md-3">
        <h3>De forma opcional:</h3>
        <ul>
            <li>Registro y autenticación de los usuarios. Los usuarios deberán autenticarse para poder acceder a la pantalla principal</li>
            <li>Para ello los usuarios podrán registrarse previamente rellenando un formulario sencillo.</li>
            <li>Los datos para el registro del usuario deberán incluir como mínimo correo electrónico</li>
            <li>Desde la pantalla principal se dará la funcionalidad de hacer logout.</li>
            <li>Almacenamiento y consulta de las últimas consultas (historial)</li>
            <li>La pantalla principal también se mostrarán las 10 últimas consultas realizadas por el usuario y sus resultados.</li>
        </ul>
    </div>
    <div class="col-md-3">
        <h3>Como mínimo:</h3>
        <ul>
            <li> Crea una aplicación web .net.</li>
            <li>Almacena tu código en tu cuenta de Github e incluye documentación sobre cómo compilar o ejecutar tu proyecto si es necesaria.</li>
            <li>Como base de datos puedes utilizar almacenamiento cloud gratuito (<a href="ttps://www.mongodb.com">GitHub</a>) o SQLite.</li>
            <li>El código debe funcionar y como mínimo debe implementarse la página principal con la funcionalidad de conversión de divisa. Es suficiente con que las páginas tengan un interfaz web básico, no elaborado.</li>
        </ul>
    </div>
    <div class="col-md-3">
        <h3>Puntos extra:</h3>
        <ul>
            <li>Desarrollar las funcionalidades extra de registro de usuarios e historial.</li>
            <li>Utilizar Bootstrap.</li>
            <li>Usar un framework Javascript moderno para la presentación de datos.</li>
            <li>Implementar pruebas unitarias.</li>
        </ul>
    </div>
</div>
